# if __name__ == "__main__":
    #// code
    #// code

#  해당 모듈이 import 된 경우가 아니라 인터프리터에서 직접 실행된 경우에만, if 문 이하의 코드를 돌리라는 명령이다.

# 모듈을 실행할 수 있는 방법은 import 혹은 직적실행이다. 



# Example

def func():
    print("function working")

if __name__ == "__main__":
    print("직접실행")
    print(__name__)
else :
    print("임포트되어 사용됨")
    print(__name__)

# 현재 파이썬 파일에서 직접 실행할 경우 __name__ 의 값은 __main__ 로 실행이 되며, 간접적으로 import 를 통해 불러와서 사용할 경우 else 문이 실행이 되며 (모듈명, 파이썬 파일 이름)이 출력된다. 


""" 핵심 """

# 파이썬은 최초로 시작하는 스크립트 파일과 모듈의 차이가 없다. 어떤 스크립트 파일이든 시적점이자 동시에 모듈이다.

# 이 __name__ 함수를 통해서 이파일이 시작점인지 모듈인지 판단할 수 있다.

# 파이썬의 인터프리터는 그 모듈을 직접실행 할 때나 import 를 통해서 모듈로서 실행할 때나, 모두 한번 씩 다 실행되게 되있다.

# 즉, __name__ == "__main__" 이라는 값은

# __name__ 은 그 파일의 이름을 뜻한다. 

# __main__ 은 직접실행하는 파일을 뜻한다. 

# 그렇기 때문에, if 문을 통해서 만약 직접실행하는 파일의 이름이 __main__ 즉 그 파일이라면 밑에 있는 문장을 실행하라. 그러한 간단한 뜻이다. 

# 이 문장이 반드시 있어야지만 다른 파일에서 임포트를 할 수 있는 것은 또한 아니다. 굳이 억매여서 이 문장을 굳이 적을 필요는 없으나, 차후 프로젝트를 할 시에 스파게티 코드가 될 가능성을 적게하기 위하여, 여러가지의 파일을 만들어야 할 때, 내가 필요할 때나 의도할 때만 사용될 수 있게끔 억제할 수 있는 제동장치가 될 수 있으므로, 어느정도 개념을 관리할 필요성이 있어 보인다.

